// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Provides nail art design suggestions based on user preferences.
 *
 * - suggestNailArtDesign - A function that suggests nail art designs.
 * - SuggestNailArtDesignInput - The input type for the suggestNailArtDesign function.
 * - SuggestNailArtDesignOutput - The return type for the suggestNailArtDesign function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const SuggestNailArtDesignInputSchema = z.object({
  color: z.string().describe('The preferred color for the nail art design.'),
  style: z.string().describe('The preferred style for the nail art design (e.g., minimalist, floral, glitter).'),
  occasion: z.string().describe('The occasion for the nail art design (e.g., party, wedding, casual).'),
});
export type SuggestNailArtDesignInput = z.infer<typeof SuggestNailArtDesignInputSchema>;

const SuggestNailArtDesignOutputSchema = z.object({
  designSuggestion: z.string().describe('A detailed description of the suggested nail art design.'),
  imageUrl: z.string().describe('A URL to an image of the suggested nail art design, if available.'),
});
export type SuggestNailArtDesignOutput = z.infer<typeof SuggestNailArtDesignOutputSchema>;

export async function suggestNailArtDesign(input: SuggestNailArtDesignInput): Promise<SuggestNailArtDesignOutput> {
  return suggestNailArtDesignFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestNailArtDesignPrompt',
  input: {
    schema: z.object({
      color: z.string().describe('The preferred color for the nail art design.'),
      style: z.string().describe('The preferred style for the nail art design (e.g., minimalist, floral, glitter).'),
      occasion: z.string().describe('The occasion for the nail art design (e.g., party, wedding, casual).'),
    }),
  },
  output: {
    schema: z.object({
      designSuggestion: z.string().describe('A detailed description of the suggested nail art design.'),
      imageUrl: z.string().describe('A URL to an image of the suggested nail art design, if available.'),
    }),
  },
  prompt: `Suggest a nail art design based on the following preferences:

Color: {{{color}}}
Style: {{{style}}}
Occasion: {{{occasion}}}

Provide a detailed description of the design and, if possible, include a URL to an image of a similar design.
`,
});

const suggestNailArtDesignFlow = ai.defineFlow<
  typeof SuggestNailArtDesignInputSchema,
  typeof SuggestNailArtDesignOutputSchema
>({
  name: 'suggestNailArtDesignFlow',
  inputSchema: SuggestNailArtDesignInputSchema,
  outputSchema: SuggestNailArtDesignOutputSchema,
}, async input => {
  const {output} = await prompt(input);
  return output!;
});
